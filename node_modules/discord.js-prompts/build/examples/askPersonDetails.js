"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const discord_js_1 = require("discord.js");
const index_1 = require("../index");
const client = new discord_js_1.Client();
// Prompt to ask name
const askNameVisual = new index_1.MessageVisual(`What's your name?`);
const askNameFn = (m, data) => __awaiter(void 0, void 0, void 0, function* () {
    return Object.assign(Object.assign({}, data), { name: m.content });
});
const askNamePrompt = new index_1.DiscordPrompt(askNameVisual, askNameFn);
// Prompt to ask age
const askAgeVisual = (data) => __awaiter(void 0, void 0, void 0, function* () {
    return new index_1.MessageVisual(`How old are you, ${data.name}?`);
});
const askAgeFn = (m, data) => __awaiter(void 0, void 0, void 0, function* () {
    const age = Number(m.content);
    if (isNaN(age)) {
        throw new index_1.Rejection(`That's not a valid number. Try again.`);
    }
    return Object.assign(Object.assign({}, data), { age });
});
const askAgePrompt = new index_1.DiscordPrompt(askAgeVisual, askAgeFn);
// Prompt that just sends visual, and doesn't wait for input
const summaryVisual = (data) => __awaiter(void 0, void 0, void 0, function* () {
    return new index_1.MessageVisual(`Your name is ${data.name}. You are ${data.age} years old.`);
});
const summaryPrompt = new index_1.DiscordPrompt(summaryVisual);
// Set up nodes
const askName = new index_1.PromptNode(askNamePrompt);
const askAge = new index_1.PromptNode(askAgePrompt);
const summary = new index_1.PromptNode(summaryPrompt);
askName.addChild(askAge);
askAge.addChild(summary);
// Now pass the root node, askName, to a PromptRunner, as done below
client.on('message', (message) => __awaiter(void 0, void 0, void 0, function* () {
    if (message.content === 'askdetails') {
        const runner = new index_1.DiscordPromptRunner(message.author, {});
        runner.run(askName, message.channel)
            .then((data) => {
            // Access data from all prompts
            console.log(data);
            // data.age
            // data.name
        })
            .catch(console.error);
    }
}));
client.login('token here');
